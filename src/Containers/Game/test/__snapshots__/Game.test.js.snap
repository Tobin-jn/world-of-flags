// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Game should render like the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(Game)
    choices={
      Array [
        Object {
          "flag": "./images/flags/Mexico.png",
          "name": "Mexico",
          "outline": "./images/outlines/Mexico.png",
          "questions": Array [
            "Tabasco Hoy",
            "El Financiero & The Oaxaca Times",
            "Oaxaca,Durango,Nayarit",
          ],
        },
        Object {
          "flag": "./images/flags/Hungary.png",
          "name": "Hungary",
          "outline": "./images/outlines/Hungary.png",
          "questions": Array [
            "Magyar Nemzet",
            "Its first king is known in English as St. Stephen & locally as Szent Istvan",
            "Nograd,Pest,Somogy",
          ],
        },
        Object {
          "flag": "./images/flags/Ireland.png",
          "name": "Ireland",
          "outline": "./images/outlines/Ireland.png",
          "questions": Array [
            "The Connaught Telegraph & The Galway Advertiser",
            "In this country's parliament, the Dail has 166 seats, the Seanad, 60",
          ],
        },
        Object {
          "flag": "./images/flags/Sweden.png",
          "name": "Sweden",
          "outline": "./images/outlines/Sweden.png",
          "questions": Array [
            "Svenska Dagbladet & Sundsvalls Tidning",
            "Ostergotland,Vasterbotten,Uppsala",
          ],
        },
      ]
    }
    compilePoints={[MockFunction]}
    correctChoice={
      Object {
        "flag": "./images/flags/Sweden.png",
        "name": "Sweden",
        "outline": "./images/outlines/Sweden.png",
        "questions": Array [
          "Svenska Dagbladet & Sundsvalls Tidning",
          "Ostergotland,Vasterbotten,Uppsala",
        ],
      }
    }
    totalPoints={10}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": Object {
      "$$typeof": Symbol(react.context),
      "_calculateChangedBits": null,
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": null,
        "_currentValue2": null,
        "_threadCount": 0,
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": Object {
        "$$typeof": Symbol(react.context),
        "_calculateChangedBits": null,
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
