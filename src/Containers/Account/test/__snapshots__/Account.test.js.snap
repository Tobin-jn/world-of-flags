// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Account should render like the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Account />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="account-area"
        >
          <div
            className="back-button"
          >
            <img
              alt=""
              className="back-img"
              src={
                Object {
                  "ReactComponent": [Function],
                  "__esModule": true,
                  "default": "back.svg",
                }
              }
            />
          </div>
        </div>,
        <div
          className="profile-image-container"
        >
          <img
            alt=""
            className="profile-image"
          />
        </div>,
        <div
          className="user-data"
        >
          <p>
            Alex Ela
          </p>
          <div
            className="points-container"
          >
            <p
              className="points-title"
            >
              POINTS
            </p>
            <p
              className="points-number"
            >
              25
            </p>
          </div>
          <p
            className="account-email"
          >
            email@email.com
          </p>
        </div>,
      ],
      "className": "Account",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="back-button"
          >
            <img
              alt=""
              className="back-img"
              src={
                Object {
                  "ReactComponent": [Function],
                  "__esModule": true,
                  "default": "back.svg",
                }
              }
            />
          </div>,
          "className": "account-area",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt=""
              className="back-img"
              src={
                Object {
                  "ReactComponent": [Function],
                  "__esModule": true,
                  "default": "back.svg",
                }
              }
            />,
            "className": "back-button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "",
              "className": "back-img",
              "src": Object {
                "ReactComponent": [Function],
                "__esModule": true,
                "default": "back.svg",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <img
            alt=""
            className="profile-image"
          />,
          "className": "profile-image-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "",
            "className": "profile-image",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p>
              Alex Ela
            </p>,
            <div
              className="points-container"
            >
              <p
                className="points-title"
              >
                POINTS
              </p>
              <p
                className="points-number"
              >
                25
              </p>
            </div>,
            <p
              className="account-email"
            >
              email@email.com
            </p>,
          ],
          "className": "user-data",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Alex Ela",
            },
            "ref": null,
            "rendered": "Alex Ela",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="points-title"
                >
                  POINTS
                </p>,
                <p
                  className="points-number"
                >
                  25
                </p>,
              ],
              "className": "points-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "POINTS",
                  "className": "points-title",
                },
                "ref": null,
                "rendered": "POINTS",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "25",
                  "className": "points-number",
                },
                "ref": null,
                "rendered": "25",
                "type": "p",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "email@email.com",
              "className": "account-email",
            },
            "ref": null,
            "rendered": "email@email.com",
            "type": "p",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="account-area"
          >
            <div
              className="back-button"
            >
              <img
                alt=""
                className="back-img"
                src={
                  Object {
                    "ReactComponent": [Function],
                    "__esModule": true,
                    "default": "back.svg",
                  }
                }
              />
            </div>
          </div>,
          <div
            className="profile-image-container"
          >
            <img
              alt=""
              className="profile-image"
            />
          </div>,
          <div
            className="user-data"
          >
            <p>
              Alex Ela
            </p>
            <div
              className="points-container"
            >
              <p
                className="points-title"
              >
                POINTS
              </p>
              <p
                className="points-number"
              >
                25
              </p>
            </div>
            <p
              className="account-email"
            >
              email@email.com
            </p>
          </div>,
        ],
        "className": "Account",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="back-button"
            >
              <img
                alt=""
                className="back-img"
                src={
                  Object {
                    "ReactComponent": [Function],
                    "__esModule": true,
                    "default": "back.svg",
                  }
                }
              />
            </div>,
            "className": "account-area",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt=""
                className="back-img"
                src={
                  Object {
                    "ReactComponent": [Function],
                    "__esModule": true,
                    "default": "back.svg",
                  }
                }
              />,
              "className": "back-button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "",
                "className": "back-img",
                "src": Object {
                  "ReactComponent": [Function],
                  "__esModule": true,
                  "default": "back.svg",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt=""
              className="profile-image"
            />,
            "className": "profile-image-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "",
              "className": "profile-image",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                Alex Ela
              </p>,
              <div
                className="points-container"
              >
                <p
                  className="points-title"
                >
                  POINTS
                </p>
                <p
                  className="points-number"
                >
                  25
                </p>
              </div>,
              <p
                className="account-email"
              >
                email@email.com
              </p>,
            ],
            "className": "user-data",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Alex Ela",
              },
              "ref": null,
              "rendered": "Alex Ela",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="points-title"
                  >
                    POINTS
                  </p>,
                  <p
                    className="points-number"
                  >
                    25
                  </p>,
                ],
                "className": "points-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "POINTS",
                    "className": "points-title",
                  },
                  "ref": null,
                  "rendered": "POINTS",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "25",
                    "className": "points-number",
                  },
                  "ref": null,
                  "rendered": "25",
                  "type": "p",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "email@email.com",
                "className": "account-email",
              },
              "ref": null,
              "rendered": "email@email.com",
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
